{"mappings":"ACEA,SAAS,EAAQ,CAAO,CAAE,CAAS,EAWjC,OARgB,IAAI,QAAQ,SAAC,CAA7B,EACE,EAAQ,gBAAgB,CAAC,EAAW,SAAC,CAArC,EACE,EACG,UAAsC,MAAA,CAA7B,EAAU,qBAA6C,MAAA,CAA1B,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAoB,MAAA,CAAZ,EAAE,MAAM,CAAC,EAAE,CAAC,KAEjF,EACF,EAGF,CAEA,IAAM,EAAe,SAAC,CAAtB,EAEE,IAAM,EAAM,SAAS,aAAa,CAAC,OAEnC,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAS,SAAS,cAAc,CAAC,UAEvC,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GACrC,EAAQ,EAAQ,SAAS,IAAI,CAAC,GAE9B,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GAErC,EAAQ,EAAY,QAAQ,IAAI,CAAC,GACjC,EAAQ,EAAe,QAAQ,IAAI,CAAC,GACpC,EAAQ,EAAQ,QAAQ,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction waitFor(element, eventName) {\n    // write your code here\n    var promise = new Promise(function(resolve) {\n        element.addEventListener(eventName, function(e) {\n            resolve(\"It was \".concat(eventName, \" on the element: \").concat(e.target.nodeName, \", id: \").concat(e.target.id, \".\"));\n        });\n    });\n    return promise;\n}\nvar printMessage = function(message) {\n    // write your code here\n    var div = document.createElement(\"div\");\n    div.classList.add(\"message\");\n    div.textContent = message;\n    document.body.append(div);\n};\nvar loginField = document.getElementById(\"login\");\nvar passwordField = document.getElementById(\"password\");\nvar button = document.getElementById(\"submit\");\nwaitFor(loginField, \"click\").then(printMessage);\nwaitFor(passwordField, \"click\").then(printMessage);\nwaitFor(button, \"click\").then(printMessage);\nwaitFor(loginField, \"input\").then(printMessage);\nwaitFor(passwordField, \"input\").then(printMessage);\nwaitFor(loginField, \"blur\").then(printMessage);\nwaitFor(passwordField, \"blur\").then(printMessage);\nwaitFor(button, \"blur\").then(printMessage);\n\n//# sourceMappingURL=index.a170a747.js.map\n","'use strict';\n\nfunction waitFor(element, eventName) {\n  // write your code here\n\n  const promise = new Promise((resolve) => {\n    element.addEventListener(eventName, (e) => {\n      resolve(\n        `It was ${eventName} on the element: ${e.target.nodeName}, id: ${e.target.id}.`,\n      );\n    });\n  });\n\n  return promise;\n}\n\nconst printMessage = (message) => {\n  // write your code here\n  const div = document.createElement('div');\n\n  div.classList.add('message');\n  div.textContent = message;\n  document.body.append(div);\n};\n\nconst loginField = document.getElementById('login');\nconst passwordField = document.getElementById('password');\nconst button = document.getElementById('submit');\n\nwaitFor(loginField, 'click').then(printMessage);\nwaitFor(passwordField, 'click').then(printMessage);\nwaitFor(button, 'click').then(printMessage);\n\nwaitFor(loginField, 'input').then(printMessage);\nwaitFor(passwordField, 'input').then(printMessage);\n\nwaitFor(loginField, 'blur').then(printMessage);\nwaitFor(passwordField, 'blur').then(printMessage);\nwaitFor(button, 'blur').then(printMessage);\n"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","e","concat","target","nodeName","id","printMessage","message","div","document","createElement","classList","add","textContent","body","append","loginField","getElementById","passwordField","button","then"],"version":3,"file":"index.a170a747.js.map"}